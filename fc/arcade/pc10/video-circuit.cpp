#ifdef PC10_ARCADE_BOARD_CPP

void PC10ArcadeBoard::video_power() {
  uint8 default_vram[0x0800] = {
0xf8,0xf8,0xf8,0xf8,0xf8,0xf8,0xf8,0xf8,0xf8,0xf8,0xf8,0xf8,0xf8,0xf8,0xf8,0xf8,
0xf8,0xf8,0xf8,0xf8,0xf8,0xf8,0xf8,0xf8,0xf8,0xf8,0xf8,0xf8,0xf8,0xf8,0xf8,0xf8,
0xf8,0xf8,0xf8,0xf8,0xf8,0xf8,0xf8,0xf8,0xf8,0xf8,0xf8,0xf8,0xf8,0xf8,0xf8,0xf8,
0xf8,0xf8,0xf8,0xf8,0xf8,0xf8,0xf8,0xf8,0xf8,0xf8,0xf8,0xf8,0xf8,0xf8,0xf8,0xf8,

0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,
0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,
0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,
0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,

0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,
0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,
0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,
0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,

0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,
0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,
0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,
0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,

0xff,0x1b,0xdb,0x1b,0xdc,0x1b,0xdc,0x1b,0xdc,0x1b,0xdc,0x1b,0xdc,0x1b,0xdc,0x1b,
0xdc,0x1b,0xdc,0x1b,0xdc,0x1b,0xdc,0x1b,0xdc,0x1b,0xdc,0x1b,0xdc,0x1b,0xdc,0x1b,
0xdc,0x1b,0xdc,0x1b,0xdc,0x1b,0xdc,0x1b,0xdc,0x1b,0xdc,0x1b,0xdc,0x1b,0xdc,0x1b,
0xdc,0x1b,0xdc,0x1b,0xdc,0x1b,0xdc,0x1b,0xdc,0x1b,0xdc,0x1b,0xdd,0x1b,0xff,0x1b,

0xff,0x1b,0xe2,0x1b,0xfa,0x1b,0xfa,0x1b,0xfa,0x1b,0xfa,0x1b,0xfa,0x1b,0xfa,0x1b,
0xfa,0x1b,0xfa,0x1b,0xfa,0x1b,0xfa,0x1b,0xfa,0x1b,0xfa,0x1b,0xfa,0x1b,0xfa,0x1b,
0xfa,0x1b,0xfa,0x1b,0xfa,0x1b,0xfa,0x1b,0xfa,0x1b,0xfa,0x1b,0xfa,0x1b,0xfa,0x1b,
0xfa,0x1b,0xfa,0x1b,0xfa,0x1b,0x64,0x1b,0x65,0x1b,0xfa,0x1b,0xde,0x1b,0xff,0x1b,

0xff,0x1b,0xe2,0x1b,0xd8,0x1b,0xd8,0x1b,0x66,0x1b,0x67,0x1b,0x68,0x1b,0x69,0x1b,
0x6a,0x1b,0xd8,0x1b,0xd8,0x1b,0xd8,0x1b,0xd8,0x1b,0x6b,0x1b,0x6c,0x1b,0x6d,0x1b,
0x6e,0x1b,0xd8,0x1b,0xd8,0x1b,0x6f,0x1b,0xd8,0x1b,0xd8,0x1b,0xd8,0x1b,0xd8,0x1b,
0xd8,0x1b,0x70,0x1b,0x71,0x1b,0x72,0x1b,0xd8,0x1b,0xd8,0x1b,0xde,0x1b,0xff,0x1b,

0xff,0x1b,0xe2,0x1b,0xd9,0x1b,0xd9,0x1b,0x73,0x1b,0x74,0x1b,0x75,0x1b,0x76,0x1b,
0x77,0x1b,0x78,0x1b,0x79,0x1b,0x7a,0x1b,0x7b,0x1b,0x7c,0x1b,0x7d,0x1b,0x7e,0x1b,
0x7f,0x1b,0x80,0x1b,0x81,0x1b,0x82,0x1b,0x83,0x1b,0x84,0x1b,0x85,0x1b,0xd9,0x1b,
0xd9,0x1b,0x86,0x1b,0x87,0x1b,0x88,0x1b,0x89,0x1b,0xd9,0x1b,0xde,0x1b,0xff,0x1b,

0xff,0x1b,0xe2,0x1b,0xfa,0x1b,0xfa,0x1b,0x8a,0x1b,0x8b,0x1b,0x8c,0x1b,0x8d,0x1b,
0x8e,0x1b,0x8f,0x1b,0x90,0x1b,0x91,0x1b,0x92,0x1b,0x93,0x1b,0x94,0x1b,0x95,0x1b,
0x96,0x1b,0x97,0x1b,0x98,0x1b,0x99,0x1b,0x9a,0x1b,0x9b,0x1b,0x9c,0x1b,0xfa,0x1b,
0xfa,0x1b,0x9d,0x1b,0x9e,0x1b,0x9f,0x1b,0xa0,0x1b,0xfa,0x1b,0xde,0x1b,0xff,0x1b,

0xff,0x1b,0xe2,0x1b,0xfa,0x1b,0xa1,0x1b,0xa2,0x1b,0xa3,0x1b,0xa4,0x1b,0xa5,0x1b,
0xa6,0x1b,0xa7,0x1b,0xa8,0x1b,0xa9,0x1b,0xaa,0x1b,0xab,0x1b,0xac,0x1b,0xad,0x1b,
0xae,0x1b,0xaf,0x1b,0xb0,0x1b,0xb1,0x1b,0xb2,0x1b,0xb3,0x1b,0xb4,0x1b,0xb5,0x1b,
0xb6,0x1b,0xb7,0x1b,0xb8,0x1b,0xb9,0x1b,0xba,0x1b,0xfa,0x1b,0xde,0x1b,0xff,0x1b,

0xff,0x1b,0xe2,0x1b,0xda,0x1b,0xbb,0x1b,0xbc,0x1b,0xbd,0x1b,0xbe,0x1b,0xbf,0x1b,
0xc0,0x1b,0xc1,0x1b,0xc2,0x1b,0xc3,0x1b,0xc4,0x1b,0xc5,0x1b,0xc6,0x1b,0xc7,0x1b,
0xc8,0x1b,0xc9,0x1b,0xca,0x1b,0xcb,0x1b,0xcc,0x1b,0xcd,0x1b,0xce,0x1b,0xda,0x1b,
0xcf,0x1b,0xd0,0x1b,0xd1,0x1b,0xd2,0x1b,0xda,0x1b,0xda,0x1b,0xde,0x1b,0xff,0x1b,

0xff,0x1b,0xe2,0x1b,0xd8,0x1b,0xd8,0x1b,0xd8,0x1b,0xd8,0x1b,0xd8,0x1b,0xd8,0x1b,
0xd3,0x1b,0xd4,0x1b,0xd5,0x1b,0xd8,0x1b,0xd8,0x1b,0xd8,0x1b,0xd8,0x1b,0xd8,0x1b,
0xd8,0x1b,0xd8,0x1b,0xd8,0x1b,0xd8,0x1b,0xd8,0x1b,0xd8,0x1b,0xd8,0x1b,0xd8,0x1b,
0xd8,0x1b,0xd8,0x1b,0xd8,0x1b,0xd8,0x1b,0xd8,0x1b,0xd8,0x1b,0xde,0x1b,0xff,0x1b,

0xff,0x1b,0xe2,0x1b,0xfa,0x1b,0xfa,0x1b,0xfa,0x1b,0xfa,0x1b,0xfa,0x1b,0xfa,0x1b,
0xd6,0x1b,0xd7,0x1b,0xfa,0x1b,0xfa,0x1b,0xfa,0x1b,0xfa,0x1b,0xfa,0x1b,0xfa,0x1b,
0xfa,0x1b,0xfa,0x1b,0xfa,0x1b,0xfa,0x1b,0xfa,0x1b,0xfa,0x1b,0xfa,0x1b,0xfa,0x1b,
0xfa,0x1b,0xfa,0x1b,0xfa,0x1b,0xfa,0x1b,0xfa,0x1b,0xfa,0x1b,0xde,0x1b,0xff,0x1b,

0xff,0x1b,0xe1,0x1b,0xe0,0x1b,0xe0,0x1b,0xe0,0x1b,0xe0,0x1b,0xe0,0x1b,0xe0,0x1b,
0xe0,0x1b,0xe0,0x1b,0xe0,0x1b,0xe0,0x1b,0xe0,0x1b,0xe0,0x1b,0xe0,0x1b,0xe0,0x1b,
0xe0,0x1b,0xe0,0x1b,0xe0,0x1b,0xe0,0x1b,0xe0,0x1b,0xe0,0x1b,0xe0,0x1b,0xe0,0x1b,
0xe0,0x1b,0xe0,0x1b,0xe0,0x1b,0xe0,0x1b,0xe0,0x1b,0xe0,0x1b,0xdf,0x1b,0xff,0x1b,

0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,
0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,
0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,
0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,

0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,
0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,
0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,
0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,

0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,
0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,
0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,
0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,

0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,
0xff,0x1b,0xff,0x1b,0xe3,0x1b,0xe4,0x1b,0xe5,0x1b,0xe6,0x1b,0xe7,0x1b,0xe8,0x1b,
0xe9,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xea,0x1b,0xff,0x1b,0xff,0x1b,
0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,

0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,
0xff,0x1b,0xff,0x1b,0xeb,0x1b,0xec,0x1b,0xed,0x1b,0xee,0x1b,0xef,0x1b,0xf0,0x1b,
0xf1,0x1b,0xf2,0x1b,0xf3,0x1b,0xf4,0x1b,0xf5,0x1b,0xf6,0x1b,0xf7,0x1b,0xff,0x1b,
0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,

0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,
0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,
0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,
0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,

0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,
0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,
0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,
0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,

0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,
0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,
0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,
0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,

0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,
0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,
0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,
0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,

0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,
0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,
0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,
0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,

0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,
0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,
0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,
0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,0xff,0x1b,

0x14,0xf9,0x15,0xf9,0x15,0xf9,0x15,0xf9,0x15,0xf9,0x15,0xf9,0x15,0xf9,0x15,0xf9,
0x15,0xf9,0x15,0xf9,0x15,0xf9,0x15,0xf9,0x15,0xf9,0x15,0xf9,0x15,0xf9,0x15,0xf9,
0x15,0xf9,0x15,0xf9,0x15,0xf9,0x15,0xf9,0x16,0xf9,0x14,0xf9,0x15,0xf9,0x15,0xf9,
0x15,0xf9,0x15,0xf9,0x15,0xf9,0x15,0xf9,0x15,0xf9,0x15,0xf9,0x15,0xf9,0x16,0xf9,

0x1b,0xf9,0xff,0xf9,0xff,0xf9,0xff,0xf9,0xff,0xf9,0xff,0xf9,0xff,0xf9,0xff,0xf9,
0xff,0xf9,0xff,0xf9,0xff,0xf9,0xff,0xf9,0xff,0xf9,0xff,0xf9,0xff,0xf9,0xff,0xf9,
0xff,0xf9,0xff,0xf9,0xff,0xf9,0xff,0xf9,0x17,0xf9,0x1b,0xf9,0x1c,0xf9,0x1d,0xf9,
0x1e,0xf9,0x1f,0xf9,0x20,0xf9,0xff,0xf9,0xff,0xf9,0xff,0xf9,0x00,0xf9,0x17,0xf9,

0x1b,0xf9,0xff,0xf9,0xff,0xf9,0xff,0xf9,0xff,0xf9,0x26,0xf9,0x27,0xf9,0x28,0xf9,
0x29,0xf9,0x2a,0xf9,0x2b,0xf9,0x2c,0xf9,0x2d,0xf9,0x2e,0xf9,0xff,0xf9,0x2f,0xf9,
0x2f,0xf9,0xff,0xf9,0xff,0xf9,0xff,0xf9,0x17,0xf9,0x1b,0xf9,0x21,0xf9,0x22,0xf9,
0x23,0xf9,0x24,0xf9,0x25,0xf9,0xff,0xf9,0xff,0xf9,0xff,0xf9,0x01,0xf9,0x17,0xf9,

0x1a,0xf9,0x19,0xf9,0x19,0xf9,0x19,0xf9,0x19,0xf9,0x19,0xf9,0x19,0xf9,0x19,0xf9,
0x19,0xf9,0x19,0xf9,0x19,0xf9,0x19,0xf9,0x19,0xf9,0x19,0xf9,0x19,0xf9,0x19,0xf9,
0x19,0xf9,0x19,0xf9,0x19,0xf9,0x19,0xf9,0x18,0xf9,0x1a,0xf9,0x19,0xf9,0x19,0xf9,
0x19,0xf9,0x19,0xf9,0x19,0xf9,0x19,0xf9,0x19,0xf9,0x19,0xf9,0x19,0xf9,0x18,0xf9,

0xf8,0xf8,0xf8,0xf8,0xf8,0xf8,0xf8,0xf8,0xf8,0xf8,0xf8,0xf8,0xf8,0xf8,0xf8,0xf8,
0xf8,0xf8,0xf8,0xf8,0xf8,0xf8,0xf8,0xf8,0xf8,0xf8,0xf8,0xf8,0xf8,0xf8,0xf8,0xf8,
0xf8,0xf8,0xf8,0xf8,0xf8,0xf8,0xf8,0xf8,0xf8,0xf8,0xf8,0xf8,0xf8,0xf8,0xf8,0xf8,
0xf8,0xf8,0xf8,0xf8,0xf8,0xf8,0xf8,0xf8,0xf8,0xf8,0xf8,0xf8,0xf8,0xf8,0xf8,0xf8,
  };
  for(unsigned addr = 0x9040; addr <= 0x97bf; addr++) {
    vram[addr & 0x07ff] = default_vram[(addr & 0x07ff) - 0x40];
  }
}

void PC10ArcadeBoard::update_video() {
  uint16 addr;
  unsigned tile_id;
  uint8 y;
  uint8 x;
  uint8 byte;
  unsigned color;
  for(unsigned tile_y = 1; tile_y < 31; tile_y++) {
    for(unsigned tile_x = 0; tile_x < 32; tile_x++) {
      addr = tile_y * 64 + tile_x * 2;
      tile_id = ((vram[addr + 0] & 0xff) << 0) + ((vram[addr + 1] & 0x07) << 8);
      for(unsigned pixel_y = 0; pixel_y < 8; pixel_y++) {
        y = ((tile_y - 1) << 3) + pixel_y;
        for(unsigned pixel_x = 0; pixel_x < 8; pixel_x++) {
          x = (tile_x << 3) + pixel_x;
          color = vram[tile_y * 64 + tile_x * 2 + 1] & 0xf8;
          for(unsigned plane = 0; plane < 3; plane++) {
            byte = chrrom[(plane << 13) + (tile_id << 3) + pixel_y];
            color += ((byte >> (7 - pixel_x)) & 1) << plane;
          }
          video_output[y * 256 + x] = color;
        }
      }
    }
  }
}

#endif
